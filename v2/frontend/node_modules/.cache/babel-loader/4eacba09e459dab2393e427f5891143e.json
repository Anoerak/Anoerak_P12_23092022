{"ast":null,"code":"import { ActivityModel } from '../models/ActivityModel';\nexport class API {\n  constructor(id, path) {\n    this.path = path;\n    this.mockedStatus = localStorage.getItem('mockedStatus');\n    this.apiUrl = path === undefined ? `http://localhost:8080/user/${id}` : `http://localhost:8080/user/${id}/${path}`;\n    this.mockedUrl = path === undefined ? `../../data/${id}/datas.json` : `../../data/${id}/${path}/datas.json`;\n    this.url = this.mockedStatus === 'true' ? this.mockedUrl : this.apiUrl;\n    this.datas = [];\n    this.loading = false;\n    this.error = false;\n    this.errorMessage = '';\n  }\n\n  async getUserDatas() {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(this.url);\n        const data = await response.json();\n        console.log(data.data);\n        this.loading = false;\n        this.error = false;\n        this.errorMessage = '';\n        this.datas.push(data.data, this.loading, this.error, this.errorMessage);\n        return this.datas;\n      } catch (error) {\n        this.loading = false;\n        this.error = true;\n        this.errorMessage = error;\n        this.datas.push(this.datas, this.loading, this.error, this.errorMessage);\n      }\n    };\n\n    fetchData();\n    return this.datas;\n  }\n\n  async getActivityDatas() {\n    const data = await this.getUserDatas();\n    const activityDatas = new ActivityModel(data[0]);\n    const processedDatas = activityDatas.getSessions();\n    console.log(processedDatas);\n    return processedDatas;\n  }\n\n  async getDatas() {\n    if (!this.path) {\n      return this.getUserDatas();\n    } else if (this.path === 'activity') {\n      return this.getActivityDatas();\n    } else if (this.path === 'average-session') {\n      return this.getAverageSessionDatas();\n    } else if (this.path === 'performance') {\n      return this.getPerformanceDatas();\n    }\n  }\n\n}","map":{"version":3,"names":["ActivityModel","API","constructor","id","path","mockedStatus","localStorage","getItem","apiUrl","undefined","mockedUrl","url","datas","loading","error","errorMessage","getUserDatas","fetchData","response","fetch","data","json","console","log","push","getActivityDatas","activityDatas","processedDatas","getSessions","getDatas","getAverageSessionDatas","getPerformanceDatas"],"sources":["/Users/sebastien/Sebbe's Cloud/School/OpenClassRooms/2 - OCR - Software Developper - JS & React/Projet 12 (60h)/P12 - Mission/00Code/frontend/src/API/api.js"],"sourcesContent":["import { ActivityModel } from '../models/ActivityModel';\n\nexport class API {\n\tconstructor(id, path) {\n\t\tthis.path = path;\n\t\tthis.mockedStatus = localStorage.getItem('mockedStatus');\n\t\tthis.apiUrl =\n\t\t\tpath === undefined ? `http://localhost:8080/user/${id}` : `http://localhost:8080/user/${id}/${path}`;\n\t\tthis.mockedUrl = path === undefined ? `../../data/${id}/datas.json` : `../../data/${id}/${path}/datas.json`;\n\t\tthis.url = this.mockedStatus === 'true' ? this.mockedUrl : this.apiUrl;\n\t\tthis.datas = [];\n\t\tthis.loading = false;\n\t\tthis.error = false;\n\t\tthis.errorMessage = '';\n\t}\n\n\tasync getUserDatas() {\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(this.url);\n\t\t\t\tconst data = await response.json();\n\t\t\t\tconsole.log(data.data);\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.error = false;\n\t\t\t\tthis.errorMessage = '';\n\t\t\t\tthis.datas.push(data.data, this.loading, this.error, this.errorMessage);\n\t\t\t\treturn this.datas;\n\t\t\t} catch (error) {\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.error = true;\n\t\t\t\tthis.errorMessage = error;\n\t\t\t\tthis.datas.push(this.datas, this.loading, this.error, this.errorMessage);\n\t\t\t}\n\t\t};\n\t\tfetchData();\n\t\treturn this.datas;\n\t}\n\n\tasync getActivityDatas() {\n\t\tconst data = await this.getUserDatas();\n\t\tconst activityDatas = new ActivityModel(data[0]);\n\t\tconst processedDatas = activityDatas.getSessions();\n\t\tconsole.log(processedDatas);\n\t\treturn processedDatas;\n\t}\n\n\tasync getDatas() {\n\t\tif (!this.path) {\n\t\t\treturn this.getUserDatas();\n\t\t} else if (this.path === 'activity') {\n\t\t\treturn this.getActivityDatas();\n\t\t} else if (this.path === 'average-session') {\n\t\t\treturn this.getAverageSessionDatas();\n\t\t} else if (this.path === 'performance') {\n\t\t\treturn this.getPerformanceDatas();\n\t\t}\n\t}\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,yBAA9B;AAEA,OAAO,MAAMC,GAAN,CAAU;EAChBC,WAAW,CAACC,EAAD,EAAKC,IAAL,EAAW;IACrB,KAAKA,IAAL,GAAYA,IAAZ;IACA,KAAKC,YAAL,GAAoBC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAApB;IACA,KAAKC,MAAL,GACCJ,IAAI,KAAKK,SAAT,GAAsB,8BAA6BN,EAAG,EAAtD,GAA2D,8BAA6BA,EAAG,IAAGC,IAAK,EADpG;IAEA,KAAKM,SAAL,GAAiBN,IAAI,KAAKK,SAAT,GAAsB,cAAaN,EAAG,aAAtC,GAAsD,cAAaA,EAAG,IAAGC,IAAK,aAA/F;IACA,KAAKO,GAAL,GAAW,KAAKN,YAAL,KAAsB,MAAtB,GAA+B,KAAKK,SAApC,GAAgD,KAAKF,MAAhE;IACA,KAAKI,KAAL,GAAa,EAAb;IACA,KAAKC,OAAL,GAAe,KAAf;IACA,KAAKC,KAAL,GAAa,KAAb;IACA,KAAKC,YAAL,GAAoB,EAApB;EACA;;EAEiB,MAAZC,YAAY,GAAG;IACpB,MAAMC,SAAS,GAAG,YAAY;MAC7B,IAAI;QACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,KAAKR,GAAN,CAA5B;QACA,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;QACAC,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACA,IAAjB;QACA,KAAKP,OAAL,GAAe,KAAf;QACA,KAAKC,KAAL,GAAa,KAAb;QACA,KAAKC,YAAL,GAAoB,EAApB;QACA,KAAKH,KAAL,CAAWY,IAAX,CAAgBJ,IAAI,CAACA,IAArB,EAA2B,KAAKP,OAAhC,EAAyC,KAAKC,KAA9C,EAAqD,KAAKC,YAA1D;QACA,OAAO,KAAKH,KAAZ;MACA,CATD,CASE,OAAOE,KAAP,EAAc;QACf,KAAKD,OAAL,GAAe,KAAf;QACA,KAAKC,KAAL,GAAa,IAAb;QACA,KAAKC,YAAL,GAAoBD,KAApB;QACA,KAAKF,KAAL,CAAWY,IAAX,CAAgB,KAAKZ,KAArB,EAA4B,KAAKC,OAAjC,EAA0C,KAAKC,KAA/C,EAAsD,KAAKC,YAA3D;MACA;IACD,CAhBD;;IAiBAE,SAAS;IACT,OAAO,KAAKL,KAAZ;EACA;;EAEqB,MAAhBa,gBAAgB,GAAG;IACxB,MAAML,IAAI,GAAG,MAAM,KAAKJ,YAAL,EAAnB;IACA,MAAMU,aAAa,GAAG,IAAI1B,aAAJ,CAAkBoB,IAAI,CAAC,CAAD,CAAtB,CAAtB;IACA,MAAMO,cAAc,GAAGD,aAAa,CAACE,WAAd,EAAvB;IACAN,OAAO,CAACC,GAAR,CAAYI,cAAZ;IACA,OAAOA,cAAP;EACA;;EAEa,MAARE,QAAQ,GAAG;IAChB,IAAI,CAAC,KAAKzB,IAAV,EAAgB;MACf,OAAO,KAAKY,YAAL,EAAP;IACA,CAFD,MAEO,IAAI,KAAKZ,IAAL,KAAc,UAAlB,EAA8B;MACpC,OAAO,KAAKqB,gBAAL,EAAP;IACA,CAFM,MAEA,IAAI,KAAKrB,IAAL,KAAc,iBAAlB,EAAqC;MAC3C,OAAO,KAAK0B,sBAAL,EAAP;IACA,CAFM,MAEA,IAAI,KAAK1B,IAAL,KAAc,aAAlB,EAAiC;MACvC,OAAO,KAAK2B,mBAAL,EAAP;IACA;EACD;;AAtDe"},"metadata":{},"sourceType":"module"}