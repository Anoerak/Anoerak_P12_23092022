{"ast":null,"code":"/**\n * Remove quotes around given string.\n */\nexport function unquote(string) {\n  return string && string.replace(/^['\"]|['\"]$/g, '');\n}\n/**\n * Return prop type object.\n *\n * @param {object} prop\n * @returns {object}\n */\n\nexport function getType(prop) {\n  if (prop.flowType) {\n    if (prop.flowType.name === 'union' && prop.flowType.elements.every(function (elem) {\n      return elem.name === 'literal';\n    })) {\n      return Object.assign({}, prop.flowType, {\n        name: 'enum',\n        value: prop.flowType.elements\n      });\n    }\n\n    return prop.flowType;\n  }\n\n  if (prop.tsType) {\n    return prop.tsType;\n  }\n\n  return prop.type;\n}\n/**\n * Show starting and ending whitespace around given string.\n */\n\nexport function showSpaces(string) {\n  return string && string.replace(/^\\s|\\s$/g, '␣');\n}","map":{"version":3,"names":["unquote","string","replace","getType","prop","flowType","name","elements","every","elem","Object","assign","value","tsType","type","showSpaces"],"sources":["/Users/sebastien/Sebbe's Cloud/School/OpenClassRooms/2 - OCR - Software Developper - JS & React/Projet 12 (60h)/P12 - Mission/0Code/frontend/node_modules/react-styleguidist/lib/client/rsg-components/Props/util.js"],"sourcesContent":["import \"core-js/modules/es.array.every\";\nimport \"core-js/modules/es.function.name\";\nimport \"core-js/modules/es.object.assign\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.replace\";\n\n/**\n * Remove quotes around given string.\n */\nexport function unquote(string) {\n  return string && string.replace(/^['\"]|['\"]$/g, '');\n}\n\n/**\n * Return prop type object.\n *\n * @param {object} prop\n * @returns {object}\n */\nexport function getType(prop) {\n  if (prop.flowType) {\n    if (prop.flowType.name === 'union' && prop.flowType.elements.every(function (elem) {\n      return elem.name === 'literal';\n    })) {\n      return Object.assign({}, prop.flowType, {\n        name: 'enum',\n        value: prop.flowType.elements\n      });\n    }\n\n    return prop.flowType;\n  }\n\n  if (prop.tsType) {\n    return prop.tsType;\n  }\n\n  return prop.type;\n}\n/**\n * Show starting and ending whitespace around given string.\n */\n\nexport function showSpaces(string) {\n  return string && string.replace(/^\\s|\\s$/g, '␣');\n}"],"mappings":"AAMA;AACA;AACA;AACA,OAAO,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;EAC9B,OAAOA,MAAM,IAAIA,MAAM,CAACC,OAAP,CAAe,cAAf,EAA+B,EAA/B,CAAjB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;EAC5B,IAAIA,IAAI,CAACC,QAAT,EAAmB;IACjB,IAAID,IAAI,CAACC,QAAL,CAAcC,IAAd,KAAuB,OAAvB,IAAkCF,IAAI,CAACC,QAAL,CAAcE,QAAd,CAAuBC,KAAvB,CAA6B,UAAUC,IAAV,EAAgB;MACjF,OAAOA,IAAI,CAACH,IAAL,KAAc,SAArB;IACD,CAFqC,CAAtC,EAEI;MACF,OAAOI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,IAAI,CAACC,QAAvB,EAAiC;QACtCC,IAAI,EAAE,MADgC;QAEtCM,KAAK,EAAER,IAAI,CAACC,QAAL,CAAcE;MAFiB,CAAjC,CAAP;IAID;;IAED,OAAOH,IAAI,CAACC,QAAZ;EACD;;EAED,IAAID,IAAI,CAACS,MAAT,EAAiB;IACf,OAAOT,IAAI,CAACS,MAAZ;EACD;;EAED,OAAOT,IAAI,CAACU,IAAZ;AACD;AACD;AACA;AACA;;AAEA,OAAO,SAASC,UAAT,CAAoBd,MAApB,EAA4B;EACjC,OAAOA,MAAM,IAAIA,MAAM,CAACC,OAAP,CAAe,UAAf,EAA2B,GAA3B,CAAjB;AACD"},"metadata":{},"sourceType":"module"}