{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = (url, id) => {\n  _s();\n\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [{\n    isError,\n    errorMessage\n  }, setError] = useState({\n    isError: false,\n    errorMessage: ''\n  });\n  useEffect(() => {\n    if (!url) return;\n    setLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url + id, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json'\n          }\n        });\n        const datas = await response.json();\n        const data = datas.data;\n        console.log('data : ', data);\n        setData(data);\n      } catch (error) {\n        setError({\n          isError: true,\n          errorMessage: error.message\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url, id]);\n  return {\n    data,\n    loading,\n    isError,\n    errorMessage\n  };\n};\n\n_s(useFetch, \"MGZV2CvCiOs61x36kbXMoI7o9Lg=\");\n\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","id","data","setData","loading","setLoading","isError","errorMessage","setError","fetchData","response","fetch","method","headers","Accept","datas","json","console","log","error","message"],"sources":["/Users/sebastien/Sebbe's Cloud/School/OpenClassRooms/2 - OCR - Software Developper - JS & React/Projet 12 (60h)/P12 - Mission/0Code/frontend/src/utils/hooks/hook.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetch = (url, id) => {\n\tconst [data, setData] = useState({});\n\tconst [loading, setLoading] = useState(true);\n\tconst [{ isError, errorMessage }, setError] = useState({ isError: false, errorMessage: '' });\n\n\tuseEffect(() => {\n\t\tif (!url) return;\n\n\t\tsetLoading(true);\n\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url + id, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tconst datas = await response.json();\n\t\t\t\tconst data = datas.data;\n\t\t\t\tconsole.log('data : ', data);\n\t\t\t\tsetData(data);\n\t\t\t} catch (error) {\n\t\t\t\tsetError({ isError: true, errorMessage: error.message });\n\t\t\t} finally {\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t};\n\t\tfetchData();\n\t}, [url, id]);\n\n\treturn { data, loading, isError, errorMessage };\n};\n\nexport default useFetch;\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,EAAN,KAAa;EAAA;;EAC7B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAAC;IAAES,OAAF;IAAWC;EAAX,CAAD,EAA4BC,QAA5B,IAAwCX,QAAQ,CAAC;IAAES,OAAO,EAAE,KAAX;IAAkBC,YAAY,EAAE;EAAhC,CAAD,CAAtD;EAEAT,SAAS,CAAC,MAAM;IACf,IAAI,CAACE,GAAL,EAAU;IAEVK,UAAU,CAAC,IAAD,CAAV;;IAEA,MAAMI,SAAS,GAAG,YAAY;MAC7B,IAAI;QACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACX,GAAG,GAAGC,EAAP,EAAW;UACtCW,MAAM,EAAE,KAD8B;UAEtCC,OAAO,EAAE;YACR,gBAAgB,kBADR;YAERC,MAAM,EAAE;UAFA;QAF6B,CAAX,CAA5B;QAOA,MAAMC,KAAK,GAAG,MAAML,QAAQ,CAACM,IAAT,EAApB;QACA,MAAMd,IAAI,GAAGa,KAAK,CAACb,IAAnB;QACAe,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBhB,IAAvB;QACAC,OAAO,CAACD,IAAD,CAAP;MACA,CAZD,CAYE,OAAOiB,KAAP,EAAc;QACfX,QAAQ,CAAC;UAAEF,OAAO,EAAE,IAAX;UAAiBC,YAAY,EAAEY,KAAK,CAACC;QAArC,CAAD,CAAR;MACA,CAdD,SAcU;QACTf,UAAU,CAAC,KAAD,CAAV;MACA;IACD,CAlBD;;IAmBAI,SAAS;EACT,CAzBQ,EAyBN,CAACT,GAAD,EAAMC,EAAN,CAzBM,CAAT;EA2BA,OAAO;IAAEC,IAAF;IAAQE,OAAR;IAAiBE,OAAjB;IAA0BC;EAA1B,CAAP;AACA,CAjCD;;GAAMR,Q;;AAmCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}