{"ast":null,"code":"var _jsxFileName = \"/Users/sebastien/Sebbe's Cloud/School/OpenClassRooms/2 - OCR - Software Developper - JS & React/Projet 12 (60h)/P12 - Mission/0Code/frontend/src/utils/context/apiContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiContext = /*#__PURE__*/React.createContext([{}, () => {}]);\n\nconst ApiProvider = props => {\n  _s();\n\n  const [mockedStatus, setMockedStatus] = useState(null);\n  return /*#__PURE__*/_jsxDEV(ApiContext.Provider, {\n    value: [mockedStatus, setMockedStatus],\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ApiProvider, \"0w3xZTFIWPFRLn7XcW/jXVFfU20=\");\n\n_c = ApiProvider;\nexport { ApiContext, ApiProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiProvider\");","map":{"version":3,"names":["React","useState","ApiContext","createContext","ApiProvider","props","mockedStatus","setMockedStatus","children"],"sources":["/Users/sebastien/Sebbe's Cloud/School/OpenClassRooms/2 - OCR - Software Developper - JS & React/Projet 12 (60h)/P12 - Mission/0Code/frontend/src/utils/context/apiContext.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ApiContext = React.createContext([{}, () => {}]);\n\nconst ApiProvider = (props) => {\n\tconst [mockedStatus, setMockedStatus] = useState(null);\n\treturn <ApiContext.Provider value={[mockedStatus, setMockedStatus]}>{props.children}</ApiContext.Provider>;\n};\n\nexport { ApiContext, ApiProvider };\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,UAAU,gBAAGF,KAAK,CAACG,aAAN,CAAoB,CAAC,EAAD,EAAK,MAAM,CAAE,CAAb,CAApB,CAAnB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,IAAD,CAAhD;EACA,oBAAO,QAAC,UAAD,CAAY,QAAZ;IAAqB,KAAK,EAAE,CAACK,YAAD,EAAeC,eAAf,CAA5B;IAAA,UAA8DF,KAAK,CAACG;EAApE;IAAA;IAAA;IAAA;EAAA,QAAP;AACA,CAHD;;GAAMJ,W;;KAAAA,W;AAKN,SAASF,UAAT,EAAqBE,WAArB"},"metadata":{},"sourceType":"module"}