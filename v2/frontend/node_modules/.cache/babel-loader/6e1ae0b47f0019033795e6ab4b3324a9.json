{"ast":null,"code":"var _jsxFileName = \"/Users/sebastien/Sebbe's Cloud/School/OpenClassRooms/2 - OCR - Software Developper - JS & React/Projet 12 (60h)/P12 - Mission/0Code/frontend/src/components/Graphs/ActivityGraph/ActivityGraph.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts'; // import PropTypes from 'prop-types';\n\nimport useFetch from '../../../utils/hooks/hook';\nimport { UserContext } from '../../../utils/context/userContext';\nimport { ActivityModel } from '../../../models/ActivityModel';\nimport Loader from '../../Loader/Loader';\nimport './ActivityGraph.css';\n/**\n * Component for displaying the activity graph\n * @component\n *\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActivityGraph = () => {\n  _s();\n\n  // Get the user id from the context\n  const [userId] = useContext(UserContext); // Get the datas from the API\n\n  const {\n    data,\n    loading\n  } = useFetch(userId, 'activity');\n\n  if (loading === true) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this);\n  } else {\n    /**\n     * Format the datas to get an array of objects with the following structure:\n     * { name: 'date', weight: 'weight', calories: 'calories'}\n     * @param {Array} datas - Datas to format\n     * @returns {Array} Formatted datas\n     */\n    const activityDatas = new ActivityModel(data);\n    const processedData = activityDatas.getSessions(); // console.log(processedData);\n\n    const customTooltipFunction = _ref => {\n      let {\n        active,\n        payload\n      } = _ref;\n\n      if (active && payload && payload.length) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom__tooltip\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tooltip__details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"label\",\n              children: [payload[0].payload.weight, \"kg\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"label\",\n              children: [payload[0].payload.calories, \"Kcal\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this);\n      }\n\n      return null;\n    };\n    /**\n     * Display the BarChart component from Recharts\n     * @returns {React.Component}  Recharts: BarChart component\n     */\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activity__graph\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Activit\\xE9 quotidienne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        minWidth: '100%',\n        aspect: 22.75 / 9,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          barGap: 8,\n          data: processedData,\n          margin: {\n            top: 100,\n            right: 30,\n            left: 43,\n            bottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            vertical: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\",\n            padding: {\n              left: -35,\n              right: -35\n            },\n            tickMargin: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            dataKey: \"weight\",\n            orientation: \"right\",\n            tickLine: false,\n            axisLine: false,\n            tickMargin: 45,\n            minTickGap: 27,\n            tick: {\n              strokeWidth: 14,\n              fill: 'var(--octonary-color)'\n            },\n            interval: 'preserveStartEnd',\n            allowDecimals: false,\n            domain: ['dataMin-1', 'dataMax+1'],\n            yAxisId: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            dataKey: \"calories\",\n            hide: true,\n            yAxisId: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: customTooltipFunction,\n            offset: 60,\n            allowEscapeViewBox: {\n              x: true,\n              y: true\n            },\n            position: {\n              y: 80\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            verticalAlign: \"top\",\n            align: \"right\",\n            wrapperStyle: {\n              top: 35,\n              right: 25\n            },\n            payload: [{\n              value: 'Poids (kg)',\n              type: 'circle',\n              id: 'weightActivity'\n            }, {\n              value: 'Calories brûlées (kcal)',\n              type: 'circle',\n              id: 'caloriesActivity'\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            yAxisId: 0,\n            dataKey: \"weight\",\n            fill: \"#282D30\",\n            barSize: 7,\n            radius: [3, 3, 0, 0],\n            unit: \"kg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            yAxisId: 1,\n            dataKey: \"calories\",\n            fill: \"#E60000\",\n            barSize: 7,\n            radius: [3, 3, 0, 0],\n            unit: \"kcal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this);\n  }\n}; // Defining the type of props expected\n// ActivityGraph.propTypes = {\n// \tprocessedData: PropTypes.arrayOf(\n// \t\tPropTypes.shape({\n// \t\t\tname: PropTypes.string.isRequired,\n// \t\t\tweight: PropTypes.number.isRequired,\n// \t\t\tcalories: PropTypes.number.isRequired,\n// \t\t})\n// \t),\n// };\n\n\n_s(ActivityGraph, \"a0fdzNC3ivng7NwYhJ/H2dj5iv8=\", false, function () {\n  return [useFetch];\n});\n\n_c = ActivityGraph;\nexport default ActivityGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityGraph\");","map":{"version":3,"names":["React","useContext","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","useFetch","UserContext","ActivityModel","Loader","ActivityGraph","userId","data","loading","activityDatas","processedData","getSessions","customTooltipFunction","active","payload","length","weight","calories","top","right","left","bottom","strokeWidth","fill","x","y","value","type","id"],"sources":["/Users/sebastien/Sebbe's Cloud/School/OpenClassRooms/2 - OCR - Software Developper - JS & React/Projet 12 (60h)/P12 - Mission/0Code/frontend/src/components/Graphs/ActivityGraph/ActivityGraph.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n// import PropTypes from 'prop-types';\n\nimport useFetch from '../../../utils/hooks/hook';\nimport { UserContext } from '../../../utils/context/userContext';\n\nimport { ActivityModel } from '../../../models/ActivityModel';\n\nimport Loader from '../../Loader/Loader';\n\nimport './ActivityGraph.css';\n\n/**\n * Component for displaying the activity graph\n * @component\n *\n */\nconst ActivityGraph = () => {\n\t// Get the user id from the context\n\tconst [userId] = useContext(UserContext);\n\t// Get the datas from the API\n\tconst { data, loading } = useFetch(userId, 'activity');\n\n\tif (loading === true) {\n\t\treturn <Loader />;\n\t} else {\n\t\t/**\n\t\t * Format the datas to get an array of objects with the following structure:\n\t\t * { name: 'date', weight: 'weight', calories: 'calories'}\n\t\t * @param {Array} datas - Datas to format\n\t\t * @returns {Array} Formatted datas\n\t\t */\n\t\tconst activityDatas = new ActivityModel(data);\n\t\tconst processedData = activityDatas.getSessions();\n\t\t// console.log(processedData);\n\n\t\tconst customTooltipFunction = ({ active, payload }) => {\n\t\t\tif (active && payload && payload.length) {\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"custom__tooltip\">\n\t\t\t\t\t\t<div className=\"tooltip__details\">\n\t\t\t\t\t\t\t<p className=\"label\">{payload[0].payload.weight}kg</p>\n\t\t\t\t\t\t\t<p className=\"label\">{payload[0].payload.calories}Kcal</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t/**\n\t\t * Display the BarChart component from Recharts\n\t\t * @returns {React.Component}  Recharts: BarChart component\n\t\t */\n\t\treturn (\n\t\t\t<div className=\"activity__graph\">\n\t\t\t\t<h3>Activité quotidienne</h3>\n\t\t\t\t{/* Using a ratio for the ResponsiveContainer */}\n\t\t\t\t<ResponsiveContainer minWidth={'100%'} aspect={22.75 / 9}>\n\t\t\t\t\t<BarChart\n\t\t\t\t\t\tbarGap={8}\n\t\t\t\t\t\tdata={processedData}\n\t\t\t\t\t\tmargin={{\n\t\t\t\t\t\t\ttop: 100,\n\t\t\t\t\t\t\tright: 30,\n\t\t\t\t\t\t\tleft: 43,\n\t\t\t\t\t\t\tbottom: 20,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* Removing the vertical line from the graph */}\n\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n\t\t\t\t\t\t{/* Moving the first bars and the last bars to the left and to the right */}\n\t\t\t\t\t\t<XAxis dataKey=\"name\" padding={{ left: -35, right: -35 }} tickMargin={16} />\n\t\t\t\t\t\t{/* Setting the YAxis for the weight datas */}\n\t\t\t\t\t\t<YAxis\n\t\t\t\t\t\t\tdataKey=\"weight\"\n\t\t\t\t\t\t\torientation=\"right\"\n\t\t\t\t\t\t\ttickLine={false}\n\t\t\t\t\t\t\taxisLine={false}\n\t\t\t\t\t\t\ttickMargin={45}\n\t\t\t\t\t\t\tminTickGap={27}\n\t\t\t\t\t\t\ttick={{ strokeWidth: 14, fill: 'var(--octonary-color)' }}\n\t\t\t\t\t\t\tinterval={'preserveStartEnd'}\n\t\t\t\t\t\t\tallowDecimals={false}\n\t\t\t\t\t\t\tdomain={['dataMin-1', 'dataMax+1']}\n\t\t\t\t\t\t\tyAxisId={0}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* Setting up the YAxis for the calories datas and hidding the line */}\n\t\t\t\t\t\t<YAxis dataKey=\"calories\" hide={true} yAxisId={1} />\n\t\t\t\t\t\t{/* Setting up and customizing the tooltip */}\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\tcontent={customTooltipFunction}\n\t\t\t\t\t\t\toffset={60}\n\t\t\t\t\t\t\tallowEscapeViewBox={{ x: true, y: true }}\n\t\t\t\t\t\t\tposition={{ y: 80 }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* Customization of the ToolTip */}\n\t\t\t\t\t\t<Legend\n\t\t\t\t\t\t\tverticalAlign=\"top\"\n\t\t\t\t\t\t\talign=\"right\"\n\t\t\t\t\t\t\twrapperStyle={{ top: 35, right: 25 }}\n\t\t\t\t\t\t\tpayload={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: 'Poids (kg)',\n\t\t\t\t\t\t\t\t\ttype: 'circle',\n\t\t\t\t\t\t\t\t\tid: 'weightActivity',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: 'Calories brûlées (kcal)',\n\t\t\t\t\t\t\t\t\ttype: 'circle',\n\t\t\t\t\t\t\t\t\tid: 'caloriesActivity',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* Customization of the bars (size, color, etc.) */}\n\t\t\t\t\t\t<Bar yAxisId={0} dataKey=\"weight\" fill=\"#282D30\" barSize={7} radius={[3, 3, 0, 0]} unit=\"kg\" />\n\t\t\t\t\t\t<Bar\n\t\t\t\t\t\t\tyAxisId={1}\n\t\t\t\t\t\t\tdataKey=\"calories\"\n\t\t\t\t\t\t\tfill=\"#E60000\"\n\t\t\t\t\t\t\tbarSize={7}\n\t\t\t\t\t\t\tradius={[3, 3, 0, 0]}\n\t\t\t\t\t\t\tunit=\"kcal\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</BarChart>\n\t\t\t\t</ResponsiveContainer>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\n// Defining the type of props expected\n// ActivityGraph.propTypes = {\n// \tprocessedData: PropTypes.arrayOf(\n// \t\tPropTypes.shape({\n// \t\t\tname: PropTypes.string.isRequired,\n// \t\t\tweight: PropTypes.number.isRequired,\n// \t\t\tcalories: PropTypes.number.isRequired,\n// \t\t})\n// \t),\n// };\n\nexport default ActivityGraph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}