{"ast":null,"code":"function walk(ast, _ref) {\n  let {\n    enter,\n    leave\n  } = _ref;\n  return visit(ast, null, enter, leave);\n}\n\nlet should_skip = false;\nlet should_remove = false;\nlet replacement = null;\nconst context = {\n  skip: () => should_skip = true,\n  remove: () => should_remove = true,\n  replace: node => replacement = node\n};\nconst childKeys = {};\n\nfunction replace(parent, prop, index, node) {\n  if (parent) {\n    if (index !== null) {\n      parent[prop][index] = node;\n    } else {\n      parent[prop] = node;\n    }\n  }\n}\n\nfunction remove(parent, prop, index) {\n  if (parent) {\n    if (index !== null) {\n      parent[prop].splice(index, 1);\n    } else {\n      delete parent[prop];\n    }\n  }\n}\n\nfunction visit(node, parent, enter, leave, prop, index) {\n  if (node) {\n    if (enter) {\n      const _should_skip = should_skip;\n      const _should_remove = should_remove;\n      const _replacement = replacement;\n      should_skip = false;\n      should_remove = false;\n      replacement = null;\n      enter.call(context, node, parent, prop, index);\n\n      if (replacement) {\n        node = replacement;\n        replace(parent, prop, index, node);\n      }\n\n      if (should_remove) {\n        remove(parent, prop, index);\n      }\n\n      const skipped = should_skip;\n      const removed = should_remove;\n      should_skip = _should_skip;\n      should_remove = _should_remove;\n      replacement = _replacement;\n      if (skipped) return node;\n      if (removed) return null;\n    }\n\n    const keys = node.type && childKeys[node.type] || (childKeys[node.type] = Object.keys(node).filter(key => typeof node[key] === 'object'));\n\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      const value = node[key];\n\n      if (Array.isArray(value)) {\n        for (let j = 0, k = 0; j < value.length; j += 1, k += 1) {\n          if (value[j] && value[j].type) {\n            if (!visit(value[j], node, enter, leave, key, k)) {\n              // removed\n              j--;\n            }\n          }\n        }\n      } else if (value && value.type) {\n        visit(value, node, enter, leave, key, null);\n      }\n    }\n\n    if (leave) {\n      const _replacement = replacement;\n      const _should_remove = should_remove;\n      replacement = null;\n      should_remove = false;\n      leave.call(context, node, parent, prop, index);\n\n      if (replacement) {\n        node = replacement;\n        replace(parent, prop, index, node);\n      }\n\n      if (should_remove) {\n        remove(parent, prop, index);\n      }\n\n      const removed = should_remove;\n      replacement = _replacement;\n      should_remove = _should_remove;\n      if (removed) return null;\n    }\n  }\n\n  return node;\n}\n\nexport { walk, childKeys };","map":{"version":3,"names":["walk","ast","enter","leave","visit","should_skip","should_remove","replacement","context","skip","remove","replace","node","childKeys","parent","prop","index","splice","_should_skip","_should_remove","_replacement","call","skipped","removed","keys","type","Object","filter","key","i","length","value","Array","isArray","j","k"],"sources":["/Users/sebastien/Sebbe's Cloud/School/OpenClassRooms/2 - OCR - Software Developper - JS & React/Projet 12 (60h)/P12 - Mission/0Code/frontend/node_modules/react-styleguidist/node_modules/estree-walker/src/estree-walker.js"],"sourcesContent":["function walk(ast, { enter, leave }) {\n\treturn visit(ast, null, enter, leave);\n}\n\nlet should_skip = false;\nlet should_remove = false;\nlet replacement = null;\nconst context = {\n\tskip: () => should_skip = true,\n\tremove: () => should_remove = true,\n\treplace: (node) => replacement = node\n};\n\nconst childKeys = {};\n\nfunction replace(parent, prop, index, node) {\n\tif (parent) {\n\t\tif (index !== null) {\n\t\t\tparent[prop][index] = node;\n\t\t} else {\n\t\t\tparent[prop] = node;\n\t\t}\n\t}\n}\n\nfunction remove(parent, prop, index) {\n\tif (parent) {\n\t\tif (index !== null) {\n\t\t\tparent[prop].splice(index, 1);\n\t\t} else {\n\t\t\tdelete parent[prop];\n\t\t}\n\t}\n}\n\nfunction visit(\n\tnode,\n\tparent,\n\tenter,\n\tleave,\n\tprop,\n\tindex\n) {\n\tif (node) {\n\t\tif (enter) {\n\t\t\tconst _should_skip = should_skip;\n\t\t\tconst _should_remove = should_remove;\n\t\t\tconst _replacement = replacement;\n\t\t\tshould_skip = false;\n\t\t\tshould_remove = false;\n\t\t\treplacement = null;\n\n\t\t\tenter.call(context, node, parent, prop, index);\n\n\t\t\tif (replacement) {\n\t\t\t\tnode = replacement;\n\t\t\t\treplace(parent, prop, index, node);\n\t\t\t}\n\n\t\t\tif (should_remove) {\n\t\t\t\tremove(parent, prop, index);\n\t\t\t}\n\n\t\t\tconst skipped = should_skip;\n\t\t\tconst removed = should_remove;\n\n\t\t\tshould_skip = _should_skip;\n\t\t\tshould_remove = _should_remove;\n\t\t\treplacement = _replacement;\n\n\t\t\tif (skipped) return node;\n\t\t\tif (removed) return null;\n\t\t}\n\n\t\tconst keys = node.type && childKeys[node.type] || (\n\t\t\tchildKeys[node.type] = Object.keys(node).filter(key => typeof (node )[key] === 'object')\n\t\t);\n\n\t\tfor (let i = 0; i < keys.length; i += 1) {\n\t\t\tconst key = keys[i];\n\t\t\tconst value = (node )[key];\n\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tfor (let j = 0, k = 0; j < value.length; j += 1, k += 1) {\n\t\t\t\t\tif (value[j] && value[j].type) {\n\t\t\t\t\t\tif (!visit(value[j], node, enter, leave, key, k)) {\n\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\tj--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if (value && value.type) {\n\t\t\t\tvisit(value, node, enter, leave, key, null);\n\t\t\t}\n\t\t}\n\n\t\tif (leave) {\n\t\t\tconst _replacement = replacement;\n\t\t\tconst _should_remove = should_remove;\n\t\t\treplacement = null;\n\t\t\tshould_remove = false;\n\n\t\t\tleave.call(context, node, parent, prop, index);\n\n\t\t\tif (replacement) {\n\t\t\t\tnode = replacement;\n\t\t\t\treplace(parent, prop, index, node);\n\t\t\t}\n\n\t\t\tif (should_remove) {\n\t\t\t\tremove(parent, prop, index);\n\t\t\t}\n\n\t\t\tconst removed = should_remove;\n\t\t\t\n\t\t\treplacement = _replacement;\n\t\t\tshould_remove = _should_remove;\n\n\t\t\tif (removed) return null;\n\t\t}\n\t}\n\n\treturn node;\n}\n\nexport { walk, childKeys };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}