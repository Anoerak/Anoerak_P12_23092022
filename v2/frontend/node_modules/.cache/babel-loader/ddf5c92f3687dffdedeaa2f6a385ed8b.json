{"ast":null,"code":"import { transform } from 'buble';\nimport transpileImports from './transpileImports';\n\nvar compile = function compile(code, config) {\n  return transform(code, config).code;\n};\n\nvar startsWithJsx = function startsWithJsx(code) {\n  return !!code.trim().match(/^</);\n};\n\nvar wrapCodeInFragment = function wrapCodeInFragment(code) {\n  return \"<React.Fragment>\" + code + \"</React.Fragment>;\";\n};\n/*\n * 1. Wrap code in React Fragment if it starts with JSX element\n * 2. Transform import statements into require() calls\n * 3. Compile code using Buble\n */\n\n\nexport default function compileCode(code, compilerConfig, onError) {\n  try {\n    var wrappedCode = startsWithJsx(code) ? wrapCodeInFragment(code) : code;\n    var compiledCode = compile(wrappedCode, compilerConfig);\n    return transpileImports(compiledCode);\n  } catch (err) {\n    if (onError && err instanceof Error) {\n      onError(err);\n    }\n  }\n\n  return '';\n}","map":{"version":3,"names":["transform","transpileImports","compile","code","config","startsWithJsx","trim","match","wrapCodeInFragment","compileCode","compilerConfig","onError","wrappedCode","compiledCode","err","Error"],"sources":["/Users/sebastien/Sebbe's Cloud/School/OpenClassRooms/2 - OCR - Software Developper - JS & React/Projet 12 (60h)/P12 - Mission/0Code/frontend/node_modules/react-styleguidist/lib/client/utils/compileCode.js"],"sourcesContent":["import \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.match\";\nimport \"core-js/modules/es.string.trim\";\nimport { transform } from 'buble';\nimport transpileImports from './transpileImports';\n\nvar compile = function compile(code, config) {\n  return transform(code, config).code;\n};\n\nvar startsWithJsx = function startsWithJsx(code) {\n  return !!code.trim().match(/^</);\n};\n\nvar wrapCodeInFragment = function wrapCodeInFragment(code) {\n  return \"<React.Fragment>\" + code + \"</React.Fragment>;\";\n};\n/*\n * 1. Wrap code in React Fragment if it starts with JSX element\n * 2. Transform import statements into require() calls\n * 3. Compile code using Buble\n */\n\n\nexport default function compileCode(code, compilerConfig, onError) {\n  try {\n    var wrappedCode = startsWithJsx(code) ? wrapCodeInFragment(code) : code;\n    var compiledCode = compile(wrappedCode, compilerConfig);\n    return transpileImports(compiledCode);\n  } catch (err) {\n    if (onError && err instanceof Error) {\n      onError(err);\n    }\n  }\n\n  return '';\n}"],"mappings":"AAGA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,MAAvB,EAA+B;EAC3C,OAAOJ,SAAS,CAACG,IAAD,EAAOC,MAAP,CAAT,CAAwBD,IAA/B;AACD,CAFD;;AAIA,IAAIE,aAAa,GAAG,SAASA,aAAT,CAAuBF,IAAvB,EAA6B;EAC/C,OAAO,CAAC,CAACA,IAAI,CAACG,IAAL,GAAYC,KAAZ,CAAkB,IAAlB,CAAT;AACD,CAFD;;AAIA,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BL,IAA5B,EAAkC;EACzD,OAAO,qBAAqBA,IAArB,GAA4B,oBAAnC;AACD,CAFD;AAGA;AACA;AACA;AACA;AACA;;;AAGA,eAAe,SAASM,WAAT,CAAqBN,IAArB,EAA2BO,cAA3B,EAA2CC,OAA3C,EAAoD;EACjE,IAAI;IACF,IAAIC,WAAW,GAAGP,aAAa,CAACF,IAAD,CAAb,GAAsBK,kBAAkB,CAACL,IAAD,CAAxC,GAAiDA,IAAnE;IACA,IAAIU,YAAY,GAAGX,OAAO,CAACU,WAAD,EAAcF,cAAd,CAA1B;IACA,OAAOT,gBAAgB,CAACY,YAAD,CAAvB;EACD,CAJD,CAIE,OAAOC,GAAP,EAAY;IACZ,IAAIH,OAAO,IAAIG,GAAG,YAAYC,KAA9B,EAAqC;MACnCJ,OAAO,CAACG,GAAD,CAAP;IACD;EACF;;EAED,OAAO,EAAP;AACD"},"metadata":{},"sourceType":"module"}