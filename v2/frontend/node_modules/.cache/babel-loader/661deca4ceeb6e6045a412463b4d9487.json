{"ast":null,"code":"export class API {\n  constructor(id, path) {\n    this.mockedStatus = localStorage.getItem('mockedStatus');\n    this.apiUrl = path === undefined ? `http://localhost:8080/user/${id}` : `http://localhost:8080/user/${id}/${path}`;\n    this.mockedUrl = path === undefined ? `../../data/${id}/datas.json` : `../../data/${id}/${path}/datas.json`;\n    this.url = this.mockedStatus === 'true' ? this.mockedUrl : this.apiUrl;\n  }\n\n  useFetch() {\n    this.datas = [];\n    if (!this.url) return;\n    this.loading = true;\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(this.url);\n        const json = await response.json();\n        let datas = json.data;\n        this.loading = false;\n        this.error = false;\n        this.errorMessage = '';\n        this.datas.push(datas, this.loading, this.error, this.errorMessage);\n      } catch (error) {\n        this.error = true;\n        this.errorMessage = error;\n      } finally {\n        this.loading = false;\n      }\n    };\n\n    fetchData();\n    return [this.datas, {\n      loading: this.loading\n    }, {\n      error: this.error\n    }, {\n      errorMessage: this.errorMessage\n    }];\n  }\n\n}","map":{"version":3,"names":["API","constructor","id","path","mockedStatus","localStorage","getItem","apiUrl","undefined","mockedUrl","url","useFetch","datas","loading","fetchData","response","fetch","json","data","error","errorMessage","push"],"sources":["/Users/sebastien/Sebbe's Cloud/School/OpenClassRooms/2 - OCR - Software Developper - JS & React/Projet 12 (60h)/P12 - Mission/00Code/frontend/src/API/api.js"],"sourcesContent":["export class API {\n\tconstructor(id, path) {\n\t\tthis.mockedStatus = localStorage.getItem('mockedStatus');\n\t\tthis.apiUrl =\n\t\t\tpath === undefined ? `http://localhost:8080/user/${id}` : `http://localhost:8080/user/${id}/${path}`;\n\t\tthis.mockedUrl = path === undefined ? `../../data/${id}/datas.json` : `../../data/${id}/${path}/datas.json`;\n\t\tthis.url = this.mockedStatus === 'true' ? this.mockedUrl : this.apiUrl;\n\t}\n\n\tuseFetch() {\n\t\tthis.datas = [];\n\n\t\tif (!this.url) return;\n\n\t\tthis.loading = true;\n\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(this.url);\n\t\t\t\tconst json = await response.json();\n\t\t\t\tlet datas = json.data;\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.error = false;\n\t\t\t\tthis.errorMessage = '';\n\t\t\t\tthis.datas.push(datas, this.loading, this.error, this.errorMessage);\n\t\t\t} catch (error) {\n\t\t\t\tthis.error = true;\n\t\t\t\tthis.errorMessage = error;\n\t\t\t} finally {\n\t\t\t\tthis.loading = false;\n\t\t\t}\n\t\t};\n\t\tfetchData();\n\t\treturn [this.datas, { loading: this.loading }, { error: this.error }, { errorMessage: this.errorMessage }];\n\t}\n}\n"],"mappings":"AAAA,OAAO,MAAMA,GAAN,CAAU;EAChBC,WAAW,CAACC,EAAD,EAAKC,IAAL,EAAW;IACrB,KAAKC,YAAL,GAAoBC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAApB;IACA,KAAKC,MAAL,GACCJ,IAAI,KAAKK,SAAT,GAAsB,8BAA6BN,EAAG,EAAtD,GAA2D,8BAA6BA,EAAG,IAAGC,IAAK,EADpG;IAEA,KAAKM,SAAL,GAAiBN,IAAI,KAAKK,SAAT,GAAsB,cAAaN,EAAG,aAAtC,GAAsD,cAAaA,EAAG,IAAGC,IAAK,aAA/F;IACA,KAAKO,GAAL,GAAW,KAAKN,YAAL,KAAsB,MAAtB,GAA+B,KAAKK,SAApC,GAAgD,KAAKF,MAAhE;EACA;;EAEDI,QAAQ,GAAG;IACV,KAAKC,KAAL,GAAa,EAAb;IAEA,IAAI,CAAC,KAAKF,GAAV,EAAe;IAEf,KAAKG,OAAL,GAAe,IAAf;;IAEA,MAAMC,SAAS,GAAG,YAAY;MAC7B,IAAI;QACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,KAAKN,GAAN,CAA5B;QACA,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;QACA,IAAIL,KAAK,GAAGK,IAAI,CAACC,IAAjB;QACA,KAAKL,OAAL,GAAe,KAAf;QACA,KAAKM,KAAL,GAAa,KAAb;QACA,KAAKC,YAAL,GAAoB,EAApB;QACA,KAAKR,KAAL,CAAWS,IAAX,CAAgBT,KAAhB,EAAuB,KAAKC,OAA5B,EAAqC,KAAKM,KAA1C,EAAiD,KAAKC,YAAtD;MACA,CARD,CAQE,OAAOD,KAAP,EAAc;QACf,KAAKA,KAAL,GAAa,IAAb;QACA,KAAKC,YAAL,GAAoBD,KAApB;MACA,CAXD,SAWU;QACT,KAAKN,OAAL,GAAe,KAAf;MACA;IACD,CAfD;;IAgBAC,SAAS;IACT,OAAO,CAAC,KAAKF,KAAN,EAAa;MAAEC,OAAO,EAAE,KAAKA;IAAhB,CAAb,EAAwC;MAAEM,KAAK,EAAE,KAAKA;IAAd,CAAxC,EAA+D;MAAEC,YAAY,EAAE,KAAKA;IAArB,CAA/D,CAAP;EACA;;AAlCe"},"metadata":{},"sourceType":"module"}