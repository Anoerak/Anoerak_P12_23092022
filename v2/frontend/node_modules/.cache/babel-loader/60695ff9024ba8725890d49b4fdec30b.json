{"ast":null,"code":"import { API } from './api.js';\n/**\n *\n * Class FetchDatas is a class that contains all the API calls used in 'Dashboard.jsx' for the props.\n * @class FetchDatas\n * @classdesc Fetch the datas from the API.\n * @extends API\n * @returns {object} The data fetched from the API.\n *\n */\n\nexport class FetchDatas {\n  /**\n   * Return the user datas from '.../user/:id'.\n   * @param {number} id The user id.\n   * @returns {object} The data fetched from the API.\n   */\n  async getUserDatas(id) {\n    const myAPI = new API(id);\n    const userDatas = myAPI.getDatas();\n    const userDatasPromise = userDatas.then(data => {\n      return data;\n    });\n    return userDatasPromise;\n  }\n  /**\n   *\n   * Return the user activity datas from '.../user/:id/activity'.\n   * @param {number} id The user id.\n   * @param {string} path The path of the API.\n   * @returns {object} The activity data fetched from the API.\n   * @returns {boolean} The loading status of the API.\n   * @returns {boolean} The error status of the API.\n   * @returns {string} The error message of the API.\n   */\n\n\n  async getActivityDatas(id, path) {\n    const myAPI = new API(id, path);\n    const activityDatas = myAPI.getDatas();\n    const activityDatasPromise = activityDatas.then(data => {\n      return data;\n    });\n    return activityDatasPromise;\n  }\n  /**\n   * Return the user average-sessions datas from '.../user/:id/average-sessions'.\n   * @param {number} id The user id.\n   * @param {string} path The path of the API.\n   * @returns {object} The average session data fetched from the API.\n   * @returns {boolean} The loading status of the API.\n   * @returns {boolean} The error status of the API.\n   * @returns {string} The error message of the API.\n   *\n   */\n\n\n  async getAverageSessionDatas(id, path) {\n    const myAPI = new API(id, path);\n    const averageSessionDatas = myAPI.getDatas();\n    const averageSessionDatasPromise = averageSessionDatas.then(data => {\n      return data;\n    });\n    return averageSessionDatasPromise;\n  }\n  /**\n   * Return the user performance datas from '.../user/:id/performance'.\n   * @param {*} id The user id.\n   * @param {*} path The path of the API.\n   * @returns\t{object} The performance data fetched from the API.\n   * @returns {boolean} The loading status of the API.\n   * @returns {boolean} The error status of the API.\n   * @returns {string} The error message of the API.\n   */\n\n\n  async getPerformanceDatas(id, path) {\n    const myAPI = new API(id, path);\n    const performanceDatas = myAPI.getDatas();\n    const performanceDatasPromise = performanceDatas.then(data => {\n      return data;\n    });\n    return performanceDatasPromise;\n  }\n\n  async getTodayScoreDatas(id) {\n    const myAPI = new API(id);\n    const todayScoreDatas = myAPI.getTodayScoreDatas();\n    const todayScoreDatasPromise = todayScoreDatas.then(data => {\n      return data;\n    });\n    return todayScoreDatasPromise;\n  }\n\n}","map":{"version":3,"names":["API","FetchDatas","getUserDatas","id","myAPI","userDatas","getDatas","userDatasPromise","then","data","getActivityDatas","path","activityDatas","activityDatasPromise","getAverageSessionDatas","averageSessionDatas","averageSessionDatasPromise","getPerformanceDatas","performanceDatas","performanceDatasPromise","getTodayScoreDatas","todayScoreDatas","todayScoreDatasPromise"],"sources":["/Users/sebastien/Sebbe's Cloud/School/OpenClassRooms/2 - OCR - Software Developper - JS & React/Projet 12 (60h)/P12 - Mission/00Code/frontend/src/API/fetchDatas.js"],"sourcesContent":["import { API } from './api.js';\n\n/**\n *\n * Class FetchDatas is a class that contains all the API calls used in 'Dashboard.jsx' for the props.\n * @class FetchDatas\n * @classdesc Fetch the datas from the API.\n * @extends API\n * @returns {object} The data fetched from the API.\n *\n */\nexport class FetchDatas {\n\t/**\n\t * Return the user datas from '.../user/:id'.\n\t * @param {number} id The user id.\n\t * @returns {object} The data fetched from the API.\n\t */\n\tasync getUserDatas(id) {\n\t\tconst myAPI = new API(id);\n\t\tconst userDatas = myAPI.getDatas();\n\t\tconst userDatasPromise = userDatas.then((data) => {\n\t\t\treturn data;\n\t\t});\n\t\treturn userDatasPromise;\n\t}\n\n\t/**\n\t *\n\t * Return the user activity datas from '.../user/:id/activity'.\n\t * @param {number} id The user id.\n\t * @param {string} path The path of the API.\n\t * @returns {object} The activity data fetched from the API.\n\t * @returns {boolean} The loading status of the API.\n\t * @returns {boolean} The error status of the API.\n\t * @returns {string} The error message of the API.\n\t */\n\tasync getActivityDatas(id, path) {\n\t\tconst myAPI = new API(id, path);\n\t\tconst activityDatas = myAPI.getDatas();\n\t\tconst activityDatasPromise = activityDatas.then((data) => {\n\t\t\treturn data;\n\t\t});\n\t\treturn activityDatasPromise;\n\t}\n\n\t/**\n\t * Return the user average-sessions datas from '.../user/:id/average-sessions'.\n\t * @param {number} id The user id.\n\t * @param {string} path The path of the API.\n\t * @returns {object} The average session data fetched from the API.\n\t * @returns {boolean} The loading status of the API.\n\t * @returns {boolean} The error status of the API.\n\t * @returns {string} The error message of the API.\n\t *\n\t */\n\tasync getAverageSessionDatas(id, path) {\n\t\tconst myAPI = new API(id, path);\n\t\tconst averageSessionDatas = myAPI.getDatas();\n\t\tconst averageSessionDatasPromise = averageSessionDatas.then((data) => {\n\t\t\treturn data;\n\t\t});\n\t\treturn averageSessionDatasPromise;\n\t}\n\n\t/**\n\t * Return the user performance datas from '.../user/:id/performance'.\n\t * @param {*} id The user id.\n\t * @param {*} path The path of the API.\n\t * @returns\t{object} The performance data fetched from the API.\n\t * @returns {boolean} The loading status of the API.\n\t * @returns {boolean} The error status of the API.\n\t * @returns {string} The error message of the API.\n\t */\n\tasync getPerformanceDatas(id, path) {\n\t\tconst myAPI = new API(id, path);\n\t\tconst performanceDatas = myAPI.getDatas();\n\t\tconst performanceDatasPromise = performanceDatas.then((data) => {\n\t\t\treturn data;\n\t\t});\n\t\treturn performanceDatasPromise;\n\t}\n\n\tasync getTodayScoreDatas(id) {\n\t\tconst myAPI = new API(id);\n\t\tconst todayScoreDatas = myAPI.getTodayScoreDatas();\n\t\tconst todayScoreDatasPromise = todayScoreDatas.then((data) => {\n\t\t\treturn data;\n\t\t});\n\t\treturn todayScoreDatasPromise;\n\t}\n}\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,UAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,UAAN,CAAiB;EACvB;AACD;AACA;AACA;AACA;EACmB,MAAZC,YAAY,CAACC,EAAD,EAAK;IACtB,MAAMC,KAAK,GAAG,IAAIJ,GAAJ,CAAQG,EAAR,CAAd;IACA,MAAME,SAAS,GAAGD,KAAK,CAACE,QAAN,EAAlB;IACA,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAgBC,IAAD,IAAU;MACjD,OAAOA,IAAP;IACA,CAFwB,CAAzB;IAGA,OAAOF,gBAAP;EACA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACuB,MAAhBG,gBAAgB,CAACP,EAAD,EAAKQ,IAAL,EAAW;IAChC,MAAMP,KAAK,GAAG,IAAIJ,GAAJ,CAAQG,EAAR,EAAYQ,IAAZ,CAAd;IACA,MAAMC,aAAa,GAAGR,KAAK,CAACE,QAAN,EAAtB;IACA,MAAMO,oBAAoB,GAAGD,aAAa,CAACJ,IAAd,CAAoBC,IAAD,IAAU;MACzD,OAAOA,IAAP;IACA,CAF4B,CAA7B;IAGA,OAAOI,oBAAP;EACA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAC6B,MAAtBC,sBAAsB,CAACX,EAAD,EAAKQ,IAAL,EAAW;IACtC,MAAMP,KAAK,GAAG,IAAIJ,GAAJ,CAAQG,EAAR,EAAYQ,IAAZ,CAAd;IACA,MAAMI,mBAAmB,GAAGX,KAAK,CAACE,QAAN,EAA5B;IACA,MAAMU,0BAA0B,GAAGD,mBAAmB,CAACP,IAApB,CAA0BC,IAAD,IAAU;MACrE,OAAOA,IAAP;IACA,CAFkC,CAAnC;IAGA,OAAOO,0BAAP;EACA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAC0B,MAAnBC,mBAAmB,CAACd,EAAD,EAAKQ,IAAL,EAAW;IACnC,MAAMP,KAAK,GAAG,IAAIJ,GAAJ,CAAQG,EAAR,EAAYQ,IAAZ,CAAd;IACA,MAAMO,gBAAgB,GAAGd,KAAK,CAACE,QAAN,EAAzB;IACA,MAAMa,uBAAuB,GAAGD,gBAAgB,CAACV,IAAjB,CAAuBC,IAAD,IAAU;MAC/D,OAAOA,IAAP;IACA,CAF+B,CAAhC;IAGA,OAAOU,uBAAP;EACA;;EAEuB,MAAlBC,kBAAkB,CAACjB,EAAD,EAAK;IAC5B,MAAMC,KAAK,GAAG,IAAIJ,GAAJ,CAAQG,EAAR,CAAd;IACA,MAAMkB,eAAe,GAAGjB,KAAK,CAACgB,kBAAN,EAAxB;IACA,MAAME,sBAAsB,GAAGD,eAAe,CAACb,IAAhB,CAAsBC,IAAD,IAAU;MAC7D,OAAOA,IAAP;IACA,CAF8B,CAA/B;IAGA,OAAOa,sBAAP;EACA;;AA9EsB"},"metadata":{},"sourceType":"module"}