{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = (id, path) => {\n  _s();\n\n  const mockedStatus = localStorage.getItem('mockedDatas');\n  const apiUrl = `http://localhost:8080/user/${id}${path}`;\n  const mockedUrl = `../../data/${id}${path}/datas.json`;\n  const url = mockedStatus === 'true' ? mockedUrl : apiUrl;\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [{\n    isError,\n    errorMessage\n  }, setError] = useState({\n    isError: false,\n    errorMessage: ''\n  });\n  useEffect(() => {\n    if (!url) return;\n    setLoading(true);\n\n    if (!path) {\n      const fetchData = async () => {\n        try {\n          const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              Accept: 'application/json'\n            }\n          });\n          const data = await response.json();\n          console.log(data);\n          setData(data.data);\n        } catch (error) {\n          setError({\n            isError: true,\n            errorMessage: error.message\n          });\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchData();\n    } else {\n      const fetchData = async () => {\n        try {\n          const response = await fetch(url + path, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              Accept: 'application/json'\n            }\n          });\n          const data = await response.json();\n          setData(data.data.sessions);\n        } catch (error) {\n          setError({\n            isError: true,\n            errorMessage: error.message\n          });\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchData();\n    }\n  }, [url, path]);\n  return {\n    data,\n    loading,\n    isError,\n    errorMessage\n  };\n};\n\n_s(useFetch, \"MGZV2CvCiOs61x36kbXMoI7o9Lg=\");\n\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","id","path","mockedStatus","localStorage","getItem","apiUrl","mockedUrl","url","data","setData","loading","setLoading","isError","errorMessage","setError","fetchData","response","fetch","method","headers","Accept","json","console","log","error","message","sessions"],"sources":["/Users/sebastien/Sebbe's Cloud/School/OpenClassRooms/2 - OCR - Software Developper - JS & React/Projet 12 (60h)/P12 - Mission/0Code/frontend/src/utils/hooks/hook.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetch = (id, path) => {\n\tconst mockedStatus = localStorage.getItem('mockedDatas');\n\n\tconst apiUrl = `http://localhost:8080/user/${id}${path}`;\n\tconst mockedUrl = `../../data/${id}${path}/datas.json`;\n\tconst url = mockedStatus === 'true' ? mockedUrl : apiUrl;\n\n\tconst [data, setData] = useState({});\n\tconst [loading, setLoading] = useState(true);\n\tconst [{ isError, errorMessage }, setError] = useState({ isError: false, errorMessage: '' });\n\n\tuseEffect(() => {\n\t\tif (!url) return;\n\n\t\tsetLoading(true);\n\n\t\tif (!path) {\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await response.json();\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tsetData(data.data);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetError({ isError: true, errorMessage: error.message });\n\t\t\t\t} finally {\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t}\n\t\t\t};\n\t\t\tfetchData();\n\t\t} else {\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url + path, {\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await response.json();\n\t\t\t\t\tsetData(data.data.sessions);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetError({ isError: true, errorMessage: error.message });\n\t\t\t\t} finally {\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t}\n\t\t\t};\n\t\t\tfetchData();\n\t\t}\n\t}, [url, path]);\n\n\treturn { data, loading, isError, errorMessage };\n};\n\nexport default useFetch;\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAc;EAAA;;EAC9B,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAArB;EAEA,MAAMC,MAAM,GAAI,8BAA6BL,EAAG,GAAEC,IAAK,EAAvD;EACA,MAAMK,SAAS,GAAI,cAAaN,EAAG,GAAEC,IAAK,aAA1C;EACA,MAAMM,GAAG,GAAGL,YAAY,KAAK,MAAjB,GAA0BI,SAA1B,GAAsCD,MAAlD;EAEA,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAAC;IAAEe,OAAF;IAAWC;EAAX,CAAD,EAA4BC,QAA5B,IAAwCjB,QAAQ,CAAC;IAAEe,OAAO,EAAE,KAAX;IAAkBC,YAAY,EAAE;EAAhC,CAAD,CAAtD;EAEAf,SAAS,CAAC,MAAM;IACf,IAAI,CAACS,GAAL,EAAU;IAEVI,UAAU,CAAC,IAAD,CAAV;;IAEA,IAAI,CAACV,IAAL,EAAW;MACV,MAAMc,SAAS,GAAG,YAAY;QAC7B,IAAI;UACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAD,EAAM;YACjCW,MAAM,EAAE,KADyB;YAEjCC,OAAO,EAAE;cACR,gBAAgB,kBADR;cAERC,MAAM,EAAE;YAFA;UAFwB,CAAN,CAA5B;UAOA,MAAMZ,IAAI,GAAG,MAAMQ,QAAQ,CAACK,IAAT,EAAnB;UACAC,OAAO,CAACC,GAAR,CAAYf,IAAZ;UACAC,OAAO,CAACD,IAAI,CAACA,IAAN,CAAP;QACA,CAXD,CAWE,OAAOgB,KAAP,EAAc;UACfV,QAAQ,CAAC;YAAEF,OAAO,EAAE,IAAX;YAAiBC,YAAY,EAAEW,KAAK,CAACC;UAArC,CAAD,CAAR;QACA,CAbD,SAaU;UACTd,UAAU,CAAC,KAAD,CAAV;QACA;MACD,CAjBD;;MAkBAI,SAAS;IACT,CApBD,MAoBO;MACN,MAAMA,SAAS,GAAG,YAAY;QAC7B,IAAI;UACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,GAAGN,IAAP,EAAa;YACxCiB,MAAM,EAAE,KADgC;YAExCC,OAAO,EAAE;cACR,gBAAgB,kBADR;cAERC,MAAM,EAAE;YAFA;UAF+B,CAAb,CAA5B;UAOA,MAAMZ,IAAI,GAAG,MAAMQ,QAAQ,CAACK,IAAT,EAAnB;UACAZ,OAAO,CAACD,IAAI,CAACA,IAAL,CAAUkB,QAAX,CAAP;QACA,CAVD,CAUE,OAAOF,KAAP,EAAc;UACfV,QAAQ,CAAC;YAAEF,OAAO,EAAE,IAAX;YAAiBC,YAAY,EAAEW,KAAK,CAACC;UAArC,CAAD,CAAR;QACA,CAZD,SAYU;UACTd,UAAU,CAAC,KAAD,CAAV;QACA;MACD,CAhBD;;MAiBAI,SAAS;IACT;EACD,CA7CQ,EA6CN,CAACR,GAAD,EAAMN,IAAN,CA7CM,CAAT;EA+CA,OAAO;IAAEO,IAAF;IAAQE,OAAR;IAAiBE,OAAjB;IAA0BC;EAA1B,CAAP;AACA,CA3DD;;GAAMd,Q;;AA6DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}