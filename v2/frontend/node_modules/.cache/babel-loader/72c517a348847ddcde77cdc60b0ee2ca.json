{"ast":null,"code":"export class API {\n  constructor(id, path) {\n    this.mockedStatus = localStorage.getItem('mockedStatus');\n    this.apiUrl = path === undefined ? `http://localhost:8080/user/${id}` : `http://localhost:8080/user/${id}/${path}`;\n    this.mockedUrl = path === undefined ? `../../data/${id}/datas.json` : `../../data/${id}/${path}/datas.json`;\n    this.url = this.mockedStatus === 'true' ? this.mockedUrl : this.apiUrl;\n    this.datas = [];\n    this.loading = false;\n    this.error = false;\n    this.errorMessage = '';\n  }\n\n  getDatas() {\n    if (!this.url) return;\n    this.loading = true;\n    const test = fetch(this.url).then(response => response.json()).then(data => {\n      return data.data;\n    }).catch(error => {\n      this.error = true;\n      this.errorMessage = error;\n    }).finally(() => {\n      this.loading = false;\n    });\n\n    const test2 = () => {\n      test.then(data => {\n        return data;\n      });\n    };\n\n    return test2(); // const fetchData = async () => {\n    // \ttry {\n    // \t\tconst response = await fetch(this.url, {\n    // \t\t\tmethod: 'GET',\n    // \t\t\theaders: {\n    // \t\t\t\t'Content-Type': 'application/json',\n    // \t\t\t\tAccept: 'application/json',\n    // \t\t\t},\n    // \t\t});\n    // \t\tconst data = await response.json();\n    // \t\tconsole.log(data.data);\n    // \t\tthis.loading = false;\n    // \t\tthis.error = false;\n    // \t\tthis.errorMessage = '';\n    // \t\tthis.datas.push(await data.data, this.loading, this.error, this.errorMessage);\n    // \t\treturn this.datas;\n    // \t} catch (error) {\n    // \t\tthis.loading = false;\n    // \t\tthis.error = true;\n    // \t\tthis.errorMessage = error;\n    // \t\tthis.datas.push(this.datas, this.loading, this.error, this.errorMessage);\n    // \t}\n    // };\n    // return fetchData().then(() => {\n    // \treturn this.datas;\n    // });\n  }\n\n}","map":{"version":3,"names":["API","constructor","id","path","mockedStatus","localStorage","getItem","apiUrl","undefined","mockedUrl","url","datas","loading","error","errorMessage","getDatas","test","fetch","then","response","json","data","catch","finally","test2"],"sources":["/Users/sebastien/Sebbe's Cloud/School/OpenClassRooms/2 - OCR - Software Developper - JS & React/Projet 12 (60h)/P12 - Mission/00Code/frontend/src/API/api.js"],"sourcesContent":["export class API {\n\tconstructor(id, path) {\n\t\tthis.mockedStatus = localStorage.getItem('mockedStatus');\n\t\tthis.apiUrl =\n\t\t\tpath === undefined ? `http://localhost:8080/user/${id}` : `http://localhost:8080/user/${id}/${path}`;\n\t\tthis.mockedUrl = path === undefined ? `../../data/${id}/datas.json` : `../../data/${id}/${path}/datas.json`;\n\t\tthis.url = this.mockedStatus === 'true' ? this.mockedUrl : this.apiUrl;\n\t\tthis.datas = [];\n\t\tthis.loading = false;\n\t\tthis.error = false;\n\t\tthis.errorMessage = '';\n\t}\n\n\tgetDatas() {\n\t\tif (!this.url) return;\n\n\t\tthis.loading = true;\n\n\t\tconst test = fetch(this.url)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\treturn data.data;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tthis.error = true;\n\t\t\t\tthis.errorMessage = error;\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tthis.loading = false;\n\t\t\t});\n\n\t\tconst test2 = () => {\n\t\t\ttest.then((data) => {\n\t\t\t\treturn data;\n\t\t\t});\n\t\t};\n\n\t\treturn test2();\n\n\t\t// const fetchData = async () => {\n\t\t// \ttry {\n\t\t// \t\tconst response = await fetch(this.url, {\n\t\t// \t\t\tmethod: 'GET',\n\t\t// \t\t\theaders: {\n\t\t// \t\t\t\t'Content-Type': 'application/json',\n\t\t// \t\t\t\tAccept: 'application/json',\n\t\t// \t\t\t},\n\t\t// \t\t});\n\t\t// \t\tconst data = await response.json();\n\t\t// \t\tconsole.log(data.data);\n\t\t// \t\tthis.loading = false;\n\t\t// \t\tthis.error = false;\n\t\t// \t\tthis.errorMessage = '';\n\t\t// \t\tthis.datas.push(await data.data, this.loading, this.error, this.errorMessage);\n\t\t// \t\treturn this.datas;\n\t\t// \t} catch (error) {\n\t\t// \t\tthis.loading = false;\n\t\t// \t\tthis.error = true;\n\t\t// \t\tthis.errorMessage = error;\n\t\t// \t\tthis.datas.push(this.datas, this.loading, this.error, this.errorMessage);\n\t\t// \t}\n\t\t// };\n\t\t// return fetchData().then(() => {\n\t\t// \treturn this.datas;\n\t\t// });\n\t}\n}\n"],"mappings":"AAAA,OAAO,MAAMA,GAAN,CAAU;EAChBC,WAAW,CAACC,EAAD,EAAKC,IAAL,EAAW;IACrB,KAAKC,YAAL,GAAoBC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAApB;IACA,KAAKC,MAAL,GACCJ,IAAI,KAAKK,SAAT,GAAsB,8BAA6BN,EAAG,EAAtD,GAA2D,8BAA6BA,EAAG,IAAGC,IAAK,EADpG;IAEA,KAAKM,SAAL,GAAiBN,IAAI,KAAKK,SAAT,GAAsB,cAAaN,EAAG,aAAtC,GAAsD,cAAaA,EAAG,IAAGC,IAAK,aAA/F;IACA,KAAKO,GAAL,GAAW,KAAKN,YAAL,KAAsB,MAAtB,GAA+B,KAAKK,SAApC,GAAgD,KAAKF,MAAhE;IACA,KAAKI,KAAL,GAAa,EAAb;IACA,KAAKC,OAAL,GAAe,KAAf;IACA,KAAKC,KAAL,GAAa,KAAb;IACA,KAAKC,YAAL,GAAoB,EAApB;EACA;;EAEDC,QAAQ,GAAG;IACV,IAAI,CAAC,KAAKL,GAAV,EAAe;IAEf,KAAKE,OAAL,GAAe,IAAf;IAEA,MAAMI,IAAI,GAAGC,KAAK,CAAC,KAAKP,GAAN,CAAL,CACXQ,IADW,CACLC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADR,EAEXF,IAFW,CAELG,IAAD,IAAU;MACf,OAAOA,IAAI,CAACA,IAAZ;IACA,CAJW,EAKXC,KALW,CAKJT,KAAD,IAAW;MACjB,KAAKA,KAAL,GAAa,IAAb;MACA,KAAKC,YAAL,GAAoBD,KAApB;IACA,CARW,EASXU,OATW,CASH,MAAM;MACd,KAAKX,OAAL,GAAe,KAAf;IACA,CAXW,CAAb;;IAaA,MAAMY,KAAK,GAAG,MAAM;MACnBR,IAAI,CAACE,IAAL,CAAWG,IAAD,IAAU;QACnB,OAAOA,IAAP;MACA,CAFD;IAGA,CAJD;;IAMA,OAAOG,KAAK,EAAZ,CAxBU,CA0BV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;;AAjEe"},"metadata":{},"sourceType":"module"}