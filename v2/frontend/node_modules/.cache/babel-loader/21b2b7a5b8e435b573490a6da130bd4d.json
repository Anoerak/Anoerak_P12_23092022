{"ast":null,"code":"(function () {\n  var fnNameMatchRegex = /^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^\\(\\s\\/]*)\\s*/;\n\n  function _name() {\n    var match, name;\n\n    if (this === Function || this === Function.prototype.constructor) {\n      name = \"Function\";\n    } else if (this !== Function.prototype) {\n      match = (\"\" + this).match(fnNameMatchRegex);\n      name = match && match[1];\n    }\n\n    return name || \"\";\n  } // Inspect the polyfill-ability of this browser\n\n\n  var needsPolyfill = !(\"name\" in Function.prototype && \"name\" in function x() {});\n\n  var canDefineProp = typeof Object.defineProperty === \"function\" && function () {\n    var result;\n\n    try {\n      Object.defineProperty(Function.prototype, \"_xyz\", {\n        get: function () {\n          return \"blah\";\n        },\n        configurable: true\n      });\n      result = Function.prototype._xyz === \"blah\";\n      delete Function.prototype._xyz;\n    } catch (e) {\n      result = false;\n    }\n\n    return result;\n  }();\n\n  var canDefineGetter = typeof Object.prototype.__defineGetter__ === \"function\" && function () {\n    var result;\n\n    try {\n      Function.prototype.__defineGetter__(\"_abc\", function () {\n        return \"foo\";\n      });\n\n      result = Function.prototype._abc === \"foo\";\n      delete Function.prototype._abc;\n    } catch (e) {\n      result = false;\n    }\n\n    return result;\n  }(); // Add the \"private\" property for testing, even if the real property can be polyfilled\n\n\n  Function.prototype._name = _name; // Polyfill it!\n  // For:\n  //  * IE >=9 <12\n  //  * Chrome <33\n\n  if (needsPolyfill) {\n    // For:\n    //  * IE >=9 <12\n    //  * Chrome >=5 <33\n    if (canDefineProp) {\n      Object.defineProperty(Function.prototype, \"name\", {\n        get: function () {\n          var name = _name.call(this); // Since named function definitions have immutable names, also memoize the\n          // output by defining the `name` property directly on this Function\n          // instance so that this polyfill will not need to be invoked again\n\n\n          if (this !== Function.prototype) {\n            Object.defineProperty(this, \"name\", {\n              value: name,\n              configurable: true\n            });\n          }\n\n          return name;\n        },\n        configurable: true\n      });\n    } // For:\n    //  * Chrome <5\n    else if (canDefineGetter) {\n      // NOTE:\n      // The snippet:\n      //\n      //     x.__defineGetter__('y', z);\n      //\n      // ...is essentially equivalent to:\n      //\n      //     Object.defineProperty(x, 'y', {\n      //       get: z,\n      //       configurable: true,  // <-- key difference #1\n      //       enumerable: true     // <-- key difference #2\n      //     });\n      //\n      Function.prototype.__defineGetter__(\"name\", function () {\n        var name = _name.call(this); // Since named function definitions have immutable names, also memoize the\n        // output by defining the `name` property directly on this Function\n        // instance so that this polyfill will not need to be invoked again\n\n\n        if (this !== Function.prototype) {\n          this.__defineGetter__(\"name\", function () {\n            return name;\n          });\n        }\n\n        return name;\n      });\n    }\n  }\n})();","map":{"version":3,"names":["fnNameMatchRegex","_name","match","name","Function","prototype","constructor","needsPolyfill","x","canDefineProp","Object","defineProperty","result","get","configurable","_xyz","e","canDefineGetter","__defineGetter__","_abc","call","value"],"sources":["/Users/sebastien/Sebbe's Cloud/School/OpenClassRooms/2 - OCR - Software Developper - JS & React/Projet 12 (60h)/P12 - Mission/0Code/frontend/node_modules/function.name-polyfill/Function.name.js"],"sourcesContent":["(function() {\n\nvar fnNameMatchRegex = /^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^\\(\\s\\/]*)\\s*/;\n\nfunction _name() {\n  var match, name;\n  if (this === Function || this === Function.prototype.constructor) {\n    name = \"Function\";\n  }\n  else if (this !== Function.prototype) {\n    match = (\"\" + this).match(fnNameMatchRegex);\n    name = match && match[1];\n  }\n  return name || \"\";\n}\n\n// Inspect the polyfill-ability of this browser\nvar needsPolyfill = !(\"name\" in Function.prototype && \"name\" in (function x() {}));\nvar canDefineProp = typeof Object.defineProperty === \"function\" &&\n  (function() {\n    var result;\n    try {\n      Object.defineProperty(Function.prototype, \"_xyz\", {\n        get: function() {\n          return \"blah\";\n        },\n        configurable: true\n      });\n      result = Function.prototype._xyz === \"blah\";\n      delete Function.prototype._xyz;\n    }\n    catch (e) {\n      result = false;\n    }\n    return result;\n  })();\nvar canDefineGetter = typeof Object.prototype.__defineGetter__ === \"function\" &&\n  (function() {\n    var result;\n    try {\n      Function.prototype.__defineGetter__(\"_abc\", function() {\n        return \"foo\";\n      });\n      result = Function.prototype._abc === \"foo\";\n      delete Function.prototype._abc;\n    }\n    catch (e) {\n      result = false;\n    }\n    return result;\n  })();\n\n\n\n// Add the \"private\" property for testing, even if the real property can be polyfilled\nFunction.prototype._name = _name;\n\n\n// Polyfill it!\n// For:\n//  * IE >=9 <12\n//  * Chrome <33\nif (needsPolyfill) {\n  // For:\n  //  * IE >=9 <12\n  //  * Chrome >=5 <33\n  if (canDefineProp) {\n    Object.defineProperty(Function.prototype, \"name\", {\n      get: function() {\n        var name = _name.call(this);\n\n        // Since named function definitions have immutable names, also memoize the\n        // output by defining the `name` property directly on this Function\n        // instance so that this polyfill will not need to be invoked again\n        if (this !== Function.prototype) {\n          Object.defineProperty(this, \"name\", {\n            value: name,\n            configurable: true\n          });\n        }\n\n        return name;\n      },\n      configurable: true\n    });\n  }\n  // For:\n  //  * Chrome <5\n  else if (canDefineGetter) {\n    // NOTE:\n    // The snippet:\n    //\n    //     x.__defineGetter__('y', z);\n    //\n    // ...is essentially equivalent to:\n    //\n    //     Object.defineProperty(x, 'y', {\n    //       get: z,\n    //       configurable: true,  // <-- key difference #1\n    //       enumerable: true     // <-- key difference #2\n    //     });\n    //\n    Function.prototype.__defineGetter__(\"name\", function() {\n      var name = _name.call(this);\n\n      // Since named function definitions have immutable names, also memoize the\n      // output by defining the `name` property directly on this Function\n      // instance so that this polyfill will not need to be invoked again\n      if (this !== Function.prototype) {\n        this.__defineGetter__(\"name\", function() { return name; });\n      }\n\n      return name;\n    });\n  }\n}\n\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}